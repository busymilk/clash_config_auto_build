name: Generate Clash Config

on:
  schedule:
    # 每2小时运行一次（UTC时间）
    - cron: '0 */2 * * *'
  workflow_dispatch:      # 允许手动触发
  
  #push:
  #  branches: [ "main" ]   #有改动时进行触发

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
     # 关键修改 1/2：配置带权限的 checkout
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}  # 显式传递令牌
        fetch-depth: 0  # 获取完整提交历史

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install pyyaml

    - name: Create directories
      run: mkdir -p external_proxies config

    - name: Download external proxies
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
        # 从仓库变量读取URL列表
        URL_LIST: ${{ vars.URL_LIST }}
      run: |
        mkdir -p external_proxies
        IFS=' ' read -ra URLS <<< "$URL_LIST"
        for url in "${URLS[@]}"; do
          # 生成唯一文件名：移除协议和域名，替换路径中的特殊字符
          filename=$(echo "$url" | sed -E 's#^https?://[^/]+/##; s/[?#].*$//; s#/#_#g')
          output="external_proxies/${filename}"
          echo "Downloading $url"
          curl -sSL "$url" -o "$output" || echo "Failed: $url"
          echo "Download finished: $output"
        done
    

    - name: Merge proxies
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
      run: python -u scripts/merge_proxies.py

    - name: Generate config
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
      run: python scripts/generate_config.py
      
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: clash-config
        path: config/config.yaml

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: config/config.yaml
        tag_name: clash-config
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}

#提交更改
    # - name: GitCommit
    #   run: |
    #     git config --local user.email "actions@github.com"
    #     git config --local user.name "GitHub Actions"
    #     git add ./config/config.yaml
    #     git commit -m "merge: $(date '+%Y-%m-%d %H:%M:%S') 合并节点"
    #     git push
# 关键修改 2/2：修复推送权限
    - name: Commit and push config changes
      env:
        # 使用 GitHub Token 作为认证凭据
        REPO_URL: https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
      run: |
        # 配置 Git 用户信息
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        
        # 拉取最新代码防止冲突
        git pull origin main
        
        # 检测文件是否有实际变更
        if git diff --quiet --exit-code -- config/config.yaml; then
          echo "No changes to commit"
          exit 0
        fi

        # 提交并推送变更
        git add config/config.yaml
        git commit -m "chore: Auto-update config file ($(date +'%Y-%m-%d %H:%M'))"
        
        # 显式使用认证后的仓库URL
        git remote set-url origin $REPO_URL
        git push origin HEAD:main
